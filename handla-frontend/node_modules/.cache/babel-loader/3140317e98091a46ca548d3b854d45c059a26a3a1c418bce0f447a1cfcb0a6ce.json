{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sivayalini\\\\ecommerce-frontend\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = product => {\n    //Check if product in  cart\n    const existingItem = cartItems.findIndex(item => item.id === product.id);\n\n    //If product already in the cart increase the quantity\n    if (existingItem !== -1) {\n      const tempCartItems = [...cartItems];\n      tempCartItems[existingItem].quantity++;\n      setCartItems(tempCartItems);\n    }\n\n    // If product not in the cart, add it with quantity 1\n    else {\n      setCartItems([...cartItems, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n  const removeFromCart = productId => {\n    setCartItems(prevCartItems => prevCartItems.filter(item => item.id !== productId));\n  };\n  const placeOrder = async orderPayload => {\n    const response = await fetch('https://localhost:44342/api/orders', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(orderPayload)\n    });\n    if (response.ok) {\n      setCartItems([]);\n      return await response.json();\n    } else {\n      throw new Error('Order placement failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      placeOrder\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","product","existingItem","findIndex","item","id","tempCartItems","quantity","removeFromCart","productId","prevCartItems","filter","placeOrder","orderPayload","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","ok","json","Error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Sivayalini/ecommerce-frontend/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const addToCart = (product) => {\r\n   //Check if product in  cart\r\n    const existingItem = cartItems.findIndex(item => item.id === product.id);\r\n\r\n    //If product already in the cart increase the quantity\r\n    if (existingItem !== -1) {      \r\n      const tempCartItems = [...cartItems];\r\n      tempCartItems[existingItem].quantity++;\r\n      setCartItems(tempCartItems);\r\n      \r\n    }\r\n    \r\n    // If product not in the cart, add it with quantity 1\r\n     else {      \r\n      setCartItems([...cartItems, { ...product, quantity: 1 }]);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCartItems((prevCartItems) => prevCartItems.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const placeOrder = async (orderPayload) => {\r\n    const response = await fetch('https://localhost:44342/api/orders', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n      body: JSON.stringify(orderPayload)\r\n    });\r\n    if (response.ok) {\r\n      setCartItems([]);\r\n      return await response.json();\r\n    } else {\r\n      throw new Error('Order placement failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart,placeOrder }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,SAAS,GAAIC,OAAO,IAAK;IAC9B;IACC,MAAMC,YAAY,GAAGJ,SAAS,CAACK,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;;IAExE;IACA,IAAIH,YAAY,KAAK,CAAC,CAAC,EAAE;MACvB,MAAMI,aAAa,GAAG,CAAC,GAAGR,SAAS,CAAC;MACpCQ,aAAa,CAACJ,YAAY,CAAC,CAACK,QAAQ,EAAE;MACtCR,YAAY,CAACO,aAAa,CAAC;IAE7B;;IAEA;IAAA,KACM;MACJP,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;QAAE,GAAGG,OAAO;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IAC3D;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,SAAS,IAAK;IACpCV,YAAY,CAAEW,aAAa,IAAKA,aAAa,CAACC,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKI,SAAS,CAAC,CAAC;EACtF,CAAC;EAED,MAAMG,UAAU,GAAG,MAAOC,YAAY,IAAK;IACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,YAAY;IACnC,CAAC,CAAC;IACF,IAAIC,QAAQ,CAACU,EAAE,EAAE;MACfzB,YAAY,CAAC,EAAE,CAAC;MAChB,OAAO,MAAMe,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC9B,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;EACF,CAAC;EAED,oBACEjC,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAE9B,SAAS;MAAEE,SAAS;MAAEQ,cAAc;MAACI;IAAW,CAAE;IAAAhB,QAAA,EAC9EA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnC,EAAA,CA/CWF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAiDzB,OAAO,MAAMuC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO5C,UAAU,CAACG,WAAW,CAAC;AAChC,CAAC;AAACyC,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}