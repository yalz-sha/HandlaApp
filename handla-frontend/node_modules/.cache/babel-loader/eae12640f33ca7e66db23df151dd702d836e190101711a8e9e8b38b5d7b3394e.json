{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();export const CartProvider=_ref=>{let{children}=_ref;const[cartItems,setCartItems]=useState([]);const addToCart=product=>{//Check if product in  cart\nconst existingItem=cartItems.findIndex(item=>item.id===product.id);//If product already in the cart increase the quantity\nif(existingItem!==-1){const tempCartItems=[...cartItems];tempCartItems[existingItem].quantity++;setCartItems(tempCartItems);}// If product not in the cart, add it with quantity 1\nelse{setCartItems([...cartItems,{...product,quantity:1}]);}};const removeFromCart=productId=>{setCartItems(prevCartItems=>prevCartItems.filter(item=>item.id!==productId));};const placeOrder=async orderPayload=>{const response=await fetch('https://localhost:44342/api/orders/placeorder',{method:'POST',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify(orderPayload)});if(response.ok){setCartItems([]);return await response.json();}else{throw new Error('Order placement failed');}};const clearCart=()=>{setCartItems([]);};return/*#__PURE__*/_jsx(CartContext.Provider,{value:{cartItems,addToCart,removeFromCart,placeOrder,clearCart},children:children});};export const useCart=()=>{return useContext(CartContext);};","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","CartContext","CartProvider","_ref","children","cartItems","setCartItems","addToCart","product","existingItem","findIndex","item","id","tempCartItems","quantity","removeFromCart","productId","prevCartItems","filter","placeOrder","orderPayload","response","fetch","method","headers","Authorization","concat","localStorage","getItem","body","JSON","stringify","ok","json","Error","clearCart","Provider","value","useCart"],"sources":["C:/Sivayalini/HandlaApp/handla-frontend/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const addToCart = (product) => {\r\n   //Check if product in  cart\r\n    const existingItem = cartItems.findIndex(item => item.id === product.id);\r\n\r\n    //If product already in the cart increase the quantity\r\n    if (existingItem !== -1) {      \r\n      const tempCartItems = [...cartItems];\r\n      tempCartItems[existingItem].quantity++;\r\n      setCartItems(tempCartItems);\r\n      \r\n    }\r\n    \r\n    // If product not in the cart, add it with quantity 1\r\n     else {      \r\n      setCartItems([...cartItems, { ...product, quantity: 1 }]);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (productId) => {\r\n    setCartItems((prevCartItems) => prevCartItems.filter(item => item.id !== productId));\r\n  };\r\n\r\n  const placeOrder = async (orderPayload) => {\r\n    const response = await fetch('https://localhost:44342/api/orders/placeorder', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n      body: JSON.stringify(orderPayload)\r\n    });\r\n    if (response.ok) {\r\n      setCartItems([]);\r\n      return await response.json();\r\n    } else {\r\n      throw new Error('Order placement failed');\r\n    }\r\n  };\r\n  const clearCart = ()=>{\r\n    setCartItems([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart,placeOrder,clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAU,SAAS,CAAIC,OAAO,EAAK,CAC9B;AACC,KAAM,CAAAC,YAAY,CAAGJ,SAAS,CAACK,SAAS,CAACC,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKJ,OAAO,CAACI,EAAE,CAAC,CAExE;AACA,GAAIH,YAAY,GAAK,CAAC,CAAC,CAAE,CACvB,KAAM,CAAAI,aAAa,CAAG,CAAC,GAAGR,SAAS,CAAC,CACpCQ,aAAa,CAACJ,YAAY,CAAC,CAACK,QAAQ,EAAE,CACtCR,YAAY,CAACO,aAAa,CAAC,CAE7B,CAEA;AAAA,IACM,CACJP,YAAY,CAAC,CAAC,GAAGD,SAAS,CAAE,CAAE,GAAGG,OAAO,CAAEM,QAAQ,CAAE,CAAE,CAAC,CAAC,CAAC,CAC3D,CACF,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIC,SAAS,EAAK,CACpCV,YAAY,CAAEW,aAAa,EAAKA,aAAa,CAACC,MAAM,CAACP,IAAI,EAAIA,IAAI,CAACC,EAAE,GAAKI,SAAS,CAAC,CAAC,CACtF,CAAC,CAED,KAAM,CAAAG,UAAU,CAAG,KAAO,CAAAC,YAAY,EAAK,CACzC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+CAA+C,CAAE,CAC5EC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCC,aAAa,WAAAC,MAAA,CAAYC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACxD,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACX,YAAY,CACnC,CAAC,CAAC,CACF,GAAIC,QAAQ,CAACW,EAAE,CAAE,CACf1B,YAAY,CAAC,EAAE,CAAC,CAChB,MAAO,MAAM,CAAAe,QAAQ,CAACY,IAAI,CAAC,CAAC,CAC9B,CAAC,IAAM,CACL,KAAM,IAAI,CAAAC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CACF,CAAC,CACD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAI,CACpB7B,YAAY,CAAC,EAAE,CAAC,CAClB,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACmC,QAAQ,EAACC,KAAK,CAAE,CAAEhC,SAAS,CAAEE,SAAS,CAAEQ,cAAc,CAACI,UAAU,CAACgB,SAAU,CAAE,CAAA/B,QAAA,CACxFA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAkC,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAxC,UAAU,CAACG,WAAW,CAAC,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}